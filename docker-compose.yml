services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      interval: 5s
      timeout: 10s
      retries: 20
    depends_on:
      - zookeeper
    networks:
      - microservices-network
 
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      # Factor de replicación para un solo broker
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
      # Deshabilitar la elección de líder basada en Kafka - usar elección de líder fija
      SCHEMA_REGISTRY_MASTER_ELIGIBILITY: "true"
      # Configurar explícitamente esta instancia como master
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: schema-registry
      # Modo de compatibilidad
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      # Mecanismo alternativo de elección de líder
      SCHEMA_REGISTRY_LEADER_ELECTION_STRATEGY: "none"
    depends_on:
        kafka:
          condition: service_healthy
    restart: always
    networks:
      - microservices-network

  # kafka_avro-main
  kafka_avro-main:
    container_name: kafka_avro-main
    build:
      context: .
    environment:
      # Esto debe reflejarse en la configuración de la aplicación
      KAFKA_BROKER: kafka:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # Añadir esta variable de entorno si su aplicación utiliza Spring
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      # O si está utilizando otra biblioteca
      BOOTSTRAP_SERVERS: kafka:9092
      TOPIC_NAME: order-topic  # Añade esta línea
    ports:
      - "8181:8181"
    depends_on:
      - kafka
      - schema-registry
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge